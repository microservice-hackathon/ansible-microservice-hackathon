---

- name: check if repository exists
  command: >
    curl -u {{ github_repo_user }}:{{ github_repo_token }}
    https://api.github.com/repos/{{ github_repo_organization }}/{{ item.name }}
  register: curl_result
  with_items: github_repo_projects
  changed_when: false

- name: create temporary directory
  file:
    dest: "{{ github_repo_temp }}"
    state: directory

- name: create repository on Github
  command: >
    curl -u {{ github_repo_user }}:{{ github_repo_token }}
    https://api.github.com/orgs/{{ github_repo_organization }}/repos
    -d '{ "name" : "{{ item.0.name }}" }'
  when: "'Not Found' in item.1.stdout"
  with_together:
    - github_repo_projects
    - curl_result.results

- name: clone source repository
  git:
    repo: "{{ item.0.template }}"
    version: "{{ item.0.template_version|default('master') }}"
    dest: "{{ github_repo_temp }}/{{ item.0.name }}"
  when: "'Not Found' in item.1.stdout and item.0.template is defined"
  with_together:
    - github_repo_projects
    - curl_result.results

- name: remove origin
  command: >
    git remote remove origin
    chdir="{{ github_repo_temp }}/{{ item.0.name }}"
  when: "'Not Found' in item.1.stdout and item.0.template is defined"
  with_together:
    - github_repo_projects
    - curl_result.results

- name: add new origin
  command: >
    git remote add origin git@github.com:{{ github_repo_organization }}/{{ item.0.name }}.git
    chdir="{{ github_repo_temp }}/{{ item.0.name }}"
  when: "'Not Found' in item.1.stdout and item.0.template is defined"
  with_together:
    - github_repo_projects
    - curl_result.results

- name: push code to new repository
  command: >
    git push -u origin {{ item.0.template_version|default('master') }}:master
    chdir="{{ github_repo_temp }}/{{ item.0.name }}"
  when: "'Not Found' in item.1.stdout and item.0.template is defined"
  with_together:
    - github_repo_projects
    - curl_result.results

- name: push tags to new repository
  command: >
  git push --tags
    chdir="{{ github_repo_temp }}/{{ item.0.name }}"
  when: "'Not Found' in item.1.stdout and item.0.template is defined"
  with_together:
    - github_repo_projects
    - curl_result.results

- name: remove temp directory
  file:
    dest: "{{ github_repo_temp }}"
    state: absent
